{
  "{\"sourceRoot\":\"C:\\\\wamp64\\\\www\\\\themeforest\\\\wp-content\\\\themes\\\\webqoda\\\\\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"C:\\\\wamp64\\\\www\\\\themeforest\\\\wp-content\\\\themes\\\\webqoda\",\"filename\":\"C:\\\\wamp64\\\\www\\\\themeforest\\\\wp-content\\\\themes\\\\webqoda\\\\gulpfile.babel.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\wamp64\\\\www\\\\themeforest\\\\wp-content\\\\themes\\\\webqoda\",\"plugins\":[{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.10.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "C:\\wamp64\\www\\themeforest\\wp-content\\themes\\webqoda\\",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "C:\\wamp64\\www\\themeforest\\wp-content\\themes\\webqoda",
      "filename": "C:\\wamp64\\www\\themeforest\\wp-content\\themes\\webqoda\\gulpfile.babel.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "C:\\wamp64\\www\\themeforest\\wp-content\\themes\\webqoda",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\wamp64\\www\\themeforest\\wp-content\\themes\\webqoda\\gulpfile.babel.js",
        "plugins": [
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "C:\\wamp64\\www\\themeforest\\wp-content\\themes\\webqoda\\gulpfile.babel.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\wamp64\\www\\themeforest\\wp-content\\themes\\webqoda\\",
        "sourceFileName": "gulpfile.babel.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.bundle = exports.build = exports.dev = exports.compress = exports.scripts = exports.copy = exports.watch = exports.images = exports.styles = exports.clean = exports.reload = exports.serve = void 0;\n\nvar _gulp = _interopRequireDefault(require(\"gulp\"));\n\nvar _yargs = _interopRequireDefault(require(\"yargs\"));\n\nvar _gulpSass = _interopRequireDefault(require(\"gulp-sass\"));\n\nvar _gulpCleanCss = _interopRequireDefault(require(\"gulp-clean-css\"));\n\nvar _gulpIf = _interopRequireDefault(require(\"gulp-if\"));\n\nvar _gulpSourcemaps = _interopRequireDefault(require(\"gulp-sourcemaps\"));\n\nvar _gulpImagemin = _interopRequireDefault(require(\"gulp-imagemin\"));\n\nvar _del = _interopRequireDefault(require(\"del\"));\n\nvar _webpackStream = _interopRequireDefault(require(\"webpack-stream\"));\n\nvar _gulpUglify = _interopRequireDefault(require(\"gulp-uglify\"));\n\nvar _vinylNamed = _interopRequireDefault(require(\"vinyl-named\"));\n\nvar _browserSync = _interopRequireDefault(require(\"browser-sync\"));\n\nvar _gulpZip = _interopRequireDefault(require(\"gulp-zip\"));\n\nvar _gulpReplace = _interopRequireDefault(require(\"gulp-replace\"));\n\nvar _package = _interopRequireDefault(require(\"./package.json\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar server = _browserSync[\"default\"].create();\n\nvar PRODUCTION = _yargs[\"default\"].argv.prod;\nvar paths = {\n  styles: {\n    src: [\"src/assets/scss/bundle.scss\", \"src/assets/scss/admin.scss\"],\n    dest: \"dist/assets/css\"\n  },\n  images: {\n    src: \"src/assets/images/**/*.{jpg,jpeg,png,svg,gif}\",\n    dest: \"dist/assets/images\"\n  },\n  scripts: {\n    src: [\"src/assets/js/bundle.js\", \"src/assets/js/admin.js\"],\n    dest: \"dist/assets/js\"\n  },\n  other: {\n    src: [\"src/assets/**/*\", \"!src/assets/{images,js,scss}\", \"!src/assets/{images,js,scss}/**/*\"],\n    dest: \"dist/assets\"\n  },\n  \"package\": {\n    src: [\"**/*\", \"!.vscode\", \"!node_modules{,/**}\", \"!packaged{,/**}\", \"!src{,/**}\", \"!.babelrc\", \"!.gitignore\", \"!gulpfile.babel.js\", \"!package.json\", \"!package-lock.json\"],\n    dest: \"packaged\"\n  }\n};\n\nvar serve = function serve(done) {\n  server.init({\n    proxy: \"http://localhost/themeforest/\"\n  });\n  done();\n};\n\nexports.serve = serve;\n\nvar reload = function reload(done) {\n  server.reload();\n  done();\n};\n\nexports.reload = reload;\n\nvar clean = function clean() {\n  return (0, _del[\"default\"])([\"dist\"]);\n};\n\nexports.clean = clean;\n\nvar styles = function styles() {\n  return _gulp[\"default\"].src(paths.styles.src).pipe((0, _gulpIf[\"default\"])(!PRODUCTION, _gulpSourcemaps[\"default\"].init())).pipe((0, _gulpSass[\"default\"])().on(\"error\", _gulpSass[\"default\"].logError)).pipe((0, _gulpIf[\"default\"])(PRODUCTION, (0, _gulpCleanCss[\"default\"])({\n    compatibility: \"ie8\"\n  }))).pipe((0, _gulpIf[\"default\"])(!PRODUCTION, _gulpSourcemaps[\"default\"].write())).pipe(_gulp[\"default\"].dest(paths.styles.dest)).pipe(server.stream());\n};\n\nexports.styles = styles;\n\nvar images = function images() {\n  return _gulp[\"default\"].src(paths.images.src).pipe((0, _gulpIf[\"default\"])(PRODUCTION, (0, _gulpImagemin[\"default\"])())).pipe(_gulp[\"default\"].dest(paths.images.dest));\n};\n\nexports.images = images;\n\nvar watch = function watch() {\n  _gulp[\"default\"].watch(\"src/assets/scss/**/*.scss\", styles);\n\n  _gulp[\"default\"].watch(\"src/assets/js/**/*.js\", _gulp[\"default\"].series(scripts, reload));\n\n  _gulp[\"default\"].watch(\"**/*.php\", reload);\n\n  _gulp[\"default\"].watch(paths.images.src, _gulp[\"default\"].series(images, reload));\n\n  _gulp[\"default\"].watch(paths.other.src, _gulp[\"default\"].series(copy, reload));\n};\n\nexports.watch = watch;\n\nvar copy = function copy() {\n  return _gulp[\"default\"].src(paths.other.src).pipe(_gulp[\"default\"].dest(paths.other.dest));\n};\n\nexports.copy = copy;\n\nvar scripts = function scripts() {\n  return _gulp[\"default\"].src(paths.scripts.src).pipe((0, _vinylNamed[\"default\"])()).pipe((0, _webpackStream[\"default\"])({\n    module: {\n      rules: [{\n        test: /\\.js$/,\n        use: {\n          loader: \"babel-loader\",\n          options: {\n            presets: [\"@babel/preset-env\"]\n          }\n        }\n      }]\n    },\n    output: {\n      filename: \"[name].js\"\n    },\n    externals: {\n      jquery: \"jQuery\"\n    },\n    devtool: !PRODUCTION ? \"inline-source-map\" : false,\n    mode: PRODUCTION ? \"production\" : \"development\"\n  })).pipe((0, _gulpIf[\"default\"])(PRODUCTION, (0, _gulpUglify[\"default\"])())).pipe(_gulp[\"default\"].dest(paths.scripts.dest));\n};\n\nexports.scripts = scripts;\n\nvar compress = function compress() {\n  return _gulp[\"default\"].src(paths[\"package\"].src).pipe((0, _gulpReplace[\"default\"])(\"_themename\", _package[\"default\"].name)).pipe((0, _gulpZip[\"default\"])(\"\".concat(_package[\"default\"].name, \".zip\"))).pipe(_gulp[\"default\"].dest(paths[\"package\"].dest));\n};\n\nexports.compress = compress;\n\nvar dev = _gulp[\"default\"].series(clean, _gulp[\"default\"].parallel(styles, scripts, images, copy), serve, watch);\n\nexports.dev = dev;\n\nvar build = _gulp[\"default\"].series(clean, _gulp[\"default\"].parallel(styles, scripts, images, copy));\n\nexports.build = build;\n\nvar bundle = _gulp[\"default\"].series(build, compress);\n\nexports.bundle = bundle;\nvar _default = dev;\nexports[\"default\"] = _default;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "gulpfile.babel.js"
      ],
      "names": [
        "server",
        "browserSync",
        "create",
        "PRODUCTION",
        "yargs",
        "argv",
        "prod",
        "paths",
        "styles",
        "src",
        "dest",
        "images",
        "scripts",
        "other",
        "serve",
        "done",
        "init",
        "proxy",
        "reload",
        "clean",
        "gulp",
        "pipe",
        "sourcemaps",
        "on",
        "sass",
        "logError",
        "compatibility",
        "write",
        "stream",
        "watch",
        "series",
        "copy",
        "module",
        "rules",
        "test",
        "use",
        "loader",
        "options",
        "presets",
        "output",
        "filename",
        "externals",
        "jquery",
        "devtool",
        "mode",
        "compress",
        "info",
        "name",
        "dev",
        "parallel",
        "build",
        "bundle"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\wamp64\\www\\themeforest\\wp-content\\themes\\webqoda\\",
      "sourcesContent": [
        "import gulp from \"gulp\";\r\nimport yargs from \"yargs\";\r\nimport sass from \"gulp-sass\";\r\nimport cleanCSS from \"gulp-clean-css\";\r\nimport gulpif from \"gulp-if\";\r\nimport sourcemaps from \"gulp-sourcemaps\";\r\nimport imagemin from \"gulp-imagemin\";\r\nimport del from \"del\";\r\nimport webpack from \"webpack-stream\";\r\nimport uglify from \"gulp-uglify\";\r\nimport named from \"vinyl-named\";\r\nimport browserSync from \"browser-sync\";\r\nimport zip from \"gulp-zip\";\r\nimport replace from \"gulp-replace\";\r\nimport info from \"./package.json\";\r\n\r\nconst server = browserSync.create();\r\nconst PRODUCTION = yargs.argv.prod;\r\n\r\nconst paths = {\r\n\tstyles: {\r\n\t\tsrc: [\"src/assets/scss/bundle.scss\", \"src/assets/scss/admin.scss\"],\r\n\t\tdest: \"dist/assets/css\",\r\n\t},\r\n\timages: {\r\n\t\tsrc: \"src/assets/images/**/*.{jpg,jpeg,png,svg,gif}\",\r\n\t\tdest: \"dist/assets/images\",\r\n\t},\r\n\tscripts: {\r\n\t\tsrc: [\"src/assets/js/bundle.js\", \"src/assets/js/admin.js\"],\r\n\t\tdest: \"dist/assets/js\",\r\n\t},\r\n\tother: {\r\n\t\tsrc: [\r\n\t\t\t\"src/assets/**/*\",\r\n\t\t\t\"!src/assets/{images,js,scss}\",\r\n\t\t\t\"!src/assets/{images,js,scss}/**/*\",\r\n\t\t],\r\n\t\tdest: \"dist/assets\",\r\n\t},\r\n\tpackage: {\r\n\t\tsrc: [\r\n\t\t\t\"**/*\",\r\n\t\t\t\"!.vscode\",\r\n\t\t\t\"!node_modules{,/**}\",\r\n\t\t\t\"!packaged{,/**}\",\r\n\t\t\t\"!src{,/**}\",\r\n\t\t\t\"!.babelrc\",\r\n\t\t\t\"!.gitignore\",\r\n\t\t\t\"!gulpfile.babel.js\",\r\n\t\t\t\"!package.json\",\r\n\t\t\t\"!package-lock.json\",\r\n\t\t],\r\n\t\tdest: \"packaged\",\r\n\t},\r\n};\r\n\r\nexport const serve = (done) => {\r\n\tserver.init({\r\n\t\tproxy: \"http://localhost/themeforest/\",\r\n\t});\r\n\tdone();\r\n};\r\n\r\nexport const reload = (done) => {\r\n\tserver.reload();\r\n\tdone();\r\n};\r\n\r\nexport const clean = () => del([\"dist\"]);\r\n\r\nexport const styles = () => {\r\n\treturn gulp\r\n\t\t.src(paths.styles.src)\r\n\t\t.pipe(gulpif(!PRODUCTION, sourcemaps.init()))\r\n\t\t.pipe(sass().on(\"error\", sass.logError))\r\n\t\t.pipe(gulpif(PRODUCTION, cleanCSS({ compatibility: \"ie8\" })))\r\n\t\t.pipe(gulpif(!PRODUCTION, sourcemaps.write()))\r\n\t\t.pipe(gulp.dest(paths.styles.dest))\r\n\t\t.pipe(server.stream());\r\n};\r\n\r\nexport const images = () => {\r\n\treturn gulp\r\n\t\t.src(paths.images.src)\r\n\t\t.pipe(gulpif(PRODUCTION, imagemin()))\r\n\t\t.pipe(gulp.dest(paths.images.dest));\r\n};\r\n\r\nexport const watch = () => {\r\n\tgulp.watch(\"src/assets/scss/**/*.scss\", styles);\r\n\tgulp.watch(\"src/assets/js/**/*.js\", gulp.series(scripts, reload));\r\n\tgulp.watch(\"**/*.php\", reload);\r\n\tgulp.watch(paths.images.src, gulp.series(images, reload));\r\n\tgulp.watch(paths.other.src, gulp.series(copy, reload));\r\n};\r\n\r\nexport const copy = () => {\r\n\treturn gulp.src(paths.other.src).pipe(gulp.dest(paths.other.dest));\r\n};\r\n\r\nexport const scripts = () => {\r\n\treturn gulp\r\n\t\t.src(paths.scripts.src)\r\n\t\t.pipe(named())\r\n\t\t.pipe(\r\n\t\t\twebpack({\r\n\t\t\t\tmodule: {\r\n\t\t\t\t\trules: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttest: /\\.js$/,\r\n\t\t\t\t\t\t\tuse: {\r\n\t\t\t\t\t\t\t\tloader: \"babel-loader\",\r\n\t\t\t\t\t\t\t\toptions: {\r\n\t\t\t\t\t\t\t\t\tpresets: [\"@babel/preset-env\"],\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t\toutput: {\r\n\t\t\t\t\tfilename: \"[name].js\",\r\n\t\t\t\t},\r\n\t\t\t\texternals: {\r\n\t\t\t\t\tjquery: \"jQuery\",\r\n\t\t\t\t},\r\n\t\t\t\tdevtool: !PRODUCTION ? \"inline-source-map\" : false,\r\n\t\t\t\tmode: PRODUCTION ? \"production\" : \"development\",\r\n\t\t\t})\r\n\t\t)\r\n\t\t.pipe(gulpif(PRODUCTION, uglify()))\r\n\t\t.pipe(gulp.dest(paths.scripts.dest));\r\n};\r\n\r\nexport const compress = () => {\r\n\treturn gulp\r\n\t\t.src(paths.package.src)\r\n\t\t.pipe(replace(\"_themename\", info.name))\r\n\t\t.pipe(zip(`${info.name}.zip`))\r\n\t\t.pipe(gulp.dest(paths.package.dest));\r\n};\r\n\r\nexport const dev = gulp.series(\r\n\tclean,\r\n\tgulp.parallel(styles, scripts, images, copy),\r\n\tserve,\r\n\twatch\r\n);\r\n\r\nexport const build = gulp.series(\r\n\tclean,\r\n\tgulp.parallel(styles, scripts, images, copy)\r\n);\r\n\r\nexport const bundle = gulp.series(build, compress);\r\n\r\nexport default dev;\r\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1595991881173
  }
}